#!/bin/bash

# Extracts the results of the NGWF CG optimisation steps from an output file 
# (which may still be running) and outputs them in a format as if you were 
# running with output_detail=BRIEF or looking at the calculation summary
# By Nicholas Hine
#
# v1.1 2019.08.18 jd: Shows commutator for EDFT too.
# v1.2 2023.03.29 jd: Wider energy fields, needed for bigger systems.
# v1.3 2024.10.10 jd: Merges Nick's changes that happened in the meantime.

for files in $@
do

awk 'BEGIN {niter=0; brief=0; oldstep0=0; inlnv=0}
     /NGWF CG iteration  001/ {print "\n|iter|    RMS Gradient   |       Total Energy    |   Step   |   Commutator |         Change        |"; message=""};
     /Job started/ {printf "%s\n",$0; brief=0};
     /Job completed/ {printf "%s%s%s%s%s%s\n",$0," in ",TT," on ",NN," processors"};
     /Starting conduction NGWF pre-optimisation process/ {print};
     /Conduction NGWF pre-optimisation process complete/ {print};
     /Proceeding with the main conduction NGWF optimisation process/ {print; oldstep0=0; step0=0; inlnv=0};
     /TOTAL TIME/ {TT=$3; NN=$5};
     /Running on/ {printf " %s %s %s\n",$2,$3,$4};
     /RMS gradient/&&($0!~/Max/) {rmsgrad=$4;};
     /step 0/ {oldstep0=step0; step0=$6};
     /Selected quadratic step/ {step=$5};
     /Selected cubic step/ {step=$5};
     /Moving atom/ {print};
     /Functional pred/ {pred=$4};
     /Predicted total energy/ {pred=$5};
     /Predicted gain in energy/ {gain=$6};
     /Starting BFGS iteration/||/improving iteration/ {step0=0; oldstep0=1};
     /Optimising kernel for current NGWFs/ {inlnv=1; niter=niter+1;
       if(niter>1) printf "%4d%21.14f%24.14f%11.6f%15.11f%24.14f\n",niter-1,rmsgrad,step0,step,commutator,step0-oldstep0;};
     /RMS NGWF gradient =/ {rmsgrad=$6}; # jd: final one
     /NGWF RMS gradient =/ {rmsgrad=$5}; # jd: intermediate ones
     /BFGS: starting iteration/ {niter=0};
     /\|  commutator / {inlnv=1; itlnv=1;};
     (inlnv==1)&&(itlnv==$1) {commutator=$4; itlnv=itlnv+1;};
     /\[H,K\] commutator/ {commutator=$4;};
     /Density kernel optimised for the current NGWF basis/ {inlnv=0};
     /WARNING: slope along search direction is still positive/ {print}
     /WARNING: maximum number of NGWF CG iterations/ {message="  <-- MAXIT_NGWF_CG EXCEEDED"}
     /NGWF optimisation converged/ {message=" <-- CG CONVERGED"}
     /NGWF self-consistent optimisation/ {brief=1;};
     (brief==0)&&/\-\- CG/ {niter=niter+1;
                oldstep0=step0;
                step0=$3; 
                printf "%4d%21.14f%24.14f%11.6f%15.11f%24.14f%s\n",niter-1,rmsgrad,step0,0.0,commutator,step0-oldstep0,message;
                niter=0};
     (brief==1)&&(NF>1)&&($0!~/[\|#=:(]/) {print $0; if($5~/CG/||$0~/Job started/) {brief=0}};
     /BFGS/&&($0!~/BFGS: line :/)&&($0!~/BFGS: trial:/)&&($0!~/BFGS: quad :/) {print};' $files

done
